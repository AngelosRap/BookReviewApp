@using BookReviewApp.Web.Models.Book
@model IEnumerable<BookDisplayViewModel>

<h2>Books</h2>

<div class="mb-3 d-flex justify-content-between">
    <form method="get" class="d-flex gap-2">
        <input type="text" name="genre" placeholder="Genre" class="form-control" value="@Context.Request.Query["genre"]" />
        <input type="number" name="year" placeholder="Year" class="form-control" value="@Context.Request.Query["year"]" />
        <input type="number" name="minRating" placeholder="Min Rating" step="0.1" min="1" max="5" class="form-control" value="@Context.Request.Query["minRating"]" />
        <button type="submit" class="btn btn-primary">Filter</button>
    </form>

    <a asp-action="Create" class="btn btn-success">Add Book</a>
</div>

<table class="table table-striped">
    <thead>
        <tr>
            <th>Title</th>
            <th>Author</th>
            <th>Year</th>
            <th>Genre</th>
            <th>Rating</th>
            <th>Reviews</th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var book in Model)
        {
            <tr>
                <td>@book.Title</td>
                <td>@book.Author</td>
                <td>@book.PublishedYear</td>
                <td>@book.Genre</td>
                <td>@(book.AverageRating.ToString("0.0"))</td>
                <td>@book.ReviewsCount</td>
                <td>
                    <a asp-action="Details" asp-route-id="@book.Id" class="btn btn-sm btn-info">Details</a>
                </td>
            </tr>
        }
    </tbody>
</table>
